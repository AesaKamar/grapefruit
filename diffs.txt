diff --git a/app/assets/stylesheets/home.scss b/app/assets/stylesheets/home.scss
index d9f1fb9..4b5932b 100644
--- a/app/assets/stylesheets/home.scss
+++ b/app/assets/stylesheets/home.scss
@@ -49,6 +49,7 @@ div.main-content{
     border-spacing:0;
     border-collapse:collapse;
     padding:0px;
+    &.full { width: 100%; }
     th{
       padding-left: 1.5em;
     }
@@ -98,4 +99,34 @@ form.registration_edit_form{
 
 footer{
   font-size: .8em;
+}
+
+.topic,.reply {
+  .author {
+    border: 1px solid gainsboro;
+    background-color: #f6f6f6;
+    color: #666;
+    padding: 1em;
+    line-height: 150%;
+    border-right: 0;
+    strong {
+      color: #222;
+    }
+  }
+  .body {
+    border: 1px solid gainsboro;
+    padding: 1em;
+    min-height: 125px;
+    border-bottom: 0;
+  }
+  &:last-child .body {
+    border-bottom: 1px solid gainsboro;
+  }
+}
+
+textarea.medium {
+  height: 150px;
+}
+textarea.large {
+  height: 300px;
 }
\ No newline at end of file
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index fd9330b..de00fa0 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -53,4 +53,13 @@ class ApplicationController < ActionController::Base
     end
   end
 
+  def get_topic
+    @topic = Topic.find(params[:topic_id] || params[:id])
+    unless @topic.present?
+      flash[:error] = "Invalid topic!"
+      redirect_to root_path
+    end
+
+  end
+
 end
diff --git a/app/controllers/topics_controller.rb b/app/controllers/topics_controller.rb
index 4bc21fa..1161a5d 100644
--- a/app/controllers/topics_controller.rb
+++ b/app/controllers/topics_controller.rb
@@ -1,12 +1,34 @@
 class TopicsController < ApplicationController
 
   before_filter :authenticate_user!
-  before_filter :user_has_access_to_course!
   before_filter :get_topic, only: [:show]
-  before_filter :get_course, only: [:index]
+  before_filter :get_course, only: [:show, :index, :create, :new]
+
+  layout "home"
+
+  def new
+    @topic = @course.topics.new
+  end
 
   def index
-    @topics = @course.paginate(page: params[:page], per_page: 25)
+    @topics = @course.topics.paginate(page: params[:page])
   end
 
+  def show
+    @replies = @topic.replies.paginate(page: params[:page], per_page: 10)
+    @reply = Reply.new
+  end
+
+  def create
+    @topic = current_user.topics.new(params.require(:topic).permit(:name, :body))
+    @topic.course = @course
+    @topic.last_poster = current_user
+    if @topic.valid?
+      @topic.save
+      flash[:success] = "Topic created!"
+      redirect_to [@course, @topic]
+    else
+      render "new"
+    end
+  end
 end
diff --git a/app/models/reply.rb b/app/models/reply.rb
index 519720f..d6ee62e 100644
--- a/app/models/reply.rb
+++ b/app/models/reply.rb
@@ -5,7 +5,7 @@
 #  id         :integer          not null, primary key
 #  course_id  :integer
 #  topic_id   :integer
-#  user_id    :integer
+#  author_id  :integer
 #  body       :string(255)
 #  created_at :datetime
 #  updated_at :datetime
@@ -18,12 +18,12 @@ class Reply < ActiveRecord::Base
   validates :body, presence: true
   validates :course_id, presence: true
   validates :topic_id, presence: true
-  validates :user_id, presence: true
+  validates :author_id, presence: true
 
   # Relationships
   # ========================================================
   belongs_to :course
-  belongs_to :user
+  belongs_to :author, class_name: "User"
   belongs_to :topic
 
 end
diff --git a/app/models/topic.rb b/app/models/topic.rb
index 3a924e3..69de842 100644
--- a/app/models/topic.rb
+++ b/app/models/topic.rb
@@ -5,37 +5,43 @@
 #  id             :integer          not null, primary key
 #  replies        :integer          default(0)
 #  course_id      :integer
-#  user_id        :integer
+#  author_id      :integer
 #  last_poster_id :integer
 #  name           :string(255)
 #  body           :string(255)
 #  created_at     :datetime
 #  updated_at     :datetime
+#  capsule_id     :integer
 #
 
 class Topic < ActiveRecord::Base
 
+  default_scope order('updated_at DESC')
+
   # Validations
   # ========================================================
   validates :name, presence: true
   validates :body, presence: true
   validates :course_id, presence: true
-  validates :user_id, presence: true
+  validates :author_id, presence: true
   validates :last_poster_id, presence: true
+  # Does not require a capsule_id
 
   # Relationships
   # ========================================================
-  belongs_to :user
+  belongs_to :author, class_name: "User"
   belongs_to :course
-  has_one :last_poster, class_name: "User"
+  belongs_to :capsule
+  belongs_to :last_poster, class_name: "User"
   has_many :replies
 
   # Reply definitions
   # ========================================================
   def add_reply(reply)
     reply.course_id = self.course_id
-    self.last_poster_id = reply.user_id
+    self.last_poster_id = reply.author_id
     self.replies << reply
+    update_attribute(:updated_at, Time.now)
     self.save
   end
 
diff --git a/app/models/user.rb b/app/models/user.rb
index a52287a..b319ce6 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -31,6 +31,9 @@ class User < ActiveRecord::Base
   has_many :course_users, dependent: :destroy
   has_many :student_courses, class_name: "Course", through: :course_users, source: :course, dependent: :destroy
 
+  has_many :replies, foreign_key: "author_id"
+  has_many :topics, foreign_key: "author_id"
+
   def display_identifier
     !self.name.blank? ? self.name.split(" ").first : self.email
   end
diff --git a/app/views/courses/show.html.erb b/app/views/courses/show.html.erb
index 0531e09..68014fa 100644
--- a/app/views/courses/show.html.erb
+++ b/app/views/courses/show.html.erb
@@ -52,4 +52,20 @@
 	</tbody>
 </table>
 
-<%= render "documents/documents", container: @course %>
\ No newline at end of file
+<%= render "documents/documents", container: @course %>
+
+<table class="listing">
+  <thead>
+    <th>Recent Discussion (<%= link_to "view all", course_topics_path(@course) %>)</th>
+  </thead>
+  <tbody>
+    <%= render @topics %>
+    <% if @topics.empty? %>
+      <tr>
+        <td>
+          <span>No topics found.</span>
+        </td>
+      </tr> 
+    <% end %>
+  </tbody>
+</table>
\ No newline at end of file
diff --git a/config/routes.rb b/config/routes.rb
index 2da07f6..38b70cc 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -46,6 +46,10 @@ Grapefruit::Application.routes.draw do
 
     end
 
+    resources :topics, only: [:new, :create, :show, :index] do
+      resources :replies, only: [:create]
+    end
+
   end
 
   # Example of regular route:
diff --git a/db/schema.rb b/db/schema.rb
index 8466aaf..b9f71d6 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -11,7 +11,7 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema.define(version: 20140127233042) do
+ActiveRecord::Schema.define(version: 20140129235603) do
 
   create_table "capsules", force: true do |t|
     t.string   "name"
@@ -63,7 +63,7 @@ ActiveRecord::Schema.define(version: 20140127233042) do
   create_table "replies", force: true do |t|
     t.integer  "course_id"
     t.integer  "topic_id"
-    t.integer  "user_id"
+    t.integer  "author_id"
     t.string   "body"
     t.datetime "created_at"
     t.datetime "updated_at"
@@ -72,12 +72,13 @@ ActiveRecord::Schema.define(version: 20140127233042) do
   create_table "topics", force: true do |t|
     t.integer  "replies",        default: 0
     t.integer  "course_id"
-    t.integer  "user_id"
+    t.integer  "author_id"
     t.integer  "last_poster_id"
     t.string   "name"
     t.string   "body"
     t.datetime "created_at"
     t.datetime "updated_at"
+    t.integer  "capsule_id"
   end
 
   create_table "users", force: true do |t|
diff --git a/diffs.txt b/diffs.txt
index 6d61b4e..49a0221 100644
--- a/diffs.txt
+++ b/diffs.txt
@@ -1,163 +0,0 @@
-diff --git a/Gemfile b/Gemfile
-index 1dede19..491f5e7 100644
---- a/Gemfile
-+++ b/Gemfile
-@@ -12,7 +12,7 @@ gem 'mysql2'
- gem 'sass-rails', '~> 4.0.0'
- 
- # ZURB Foundation 4.0
--gem "compass-rails", "~> 2.0.alpha.0"
-+gem "compass-rails"
- gem 'zurb-foundation'
- 
- # config for configuraiton files and YAML
-@@ -45,6 +45,9 @@ gem 'jbuilder', '~> 1.2'
- # ActiveRecord extensions
- gem "activerecord-import", ">= 0.4.0"
- 
-+# Simple pagination
-+gem "will_paginate"
-+
- group :doc do
-   # bundle exec rake doc:rails generates the API under doc/api.
-   # helpful if you know you won't have an internet connection
-diff --git a/Gemfile.lock b/Gemfile.lock
-index 003ec40..9ebf99e 100644
---- a/Gemfile.lock
-+++ b/Gemfile.lock
-@@ -52,8 +52,8 @@ GEM
-       chunky_png (~> 1.2)
-       fssm (>= 0.2.7)
-       sass (~> 3.1)
--    compass-rails (2.0.alpha.0)
--      compass (>= 0.12.2, < 0.14)
-+    compass-rails (1.1.3)
-+      compass (>= 0.12.2)
-     crack (0.4.1)
-       safe_yaml (~> 0.9.0)
-     daemon_controller (1.1.8)
-@@ -80,7 +80,7 @@ GEM
-       railties (>= 3.0, < 5.0)
-       thor (>= 0.14, < 2.0)
-     json (1.8.1)
--    jwt (0.1.10)
-+    jwt (0.1.11)
-       multi_json (>= 1.5)
-     mail (2.5.4)
-       mime-types (~> 1.16)
-@@ -90,7 +90,7 @@ GEM
-     multi_json (1.8.4)
-     multi_xml (0.5.5)
-     multipart-post (2.0.0)
--    mysql2 (0.3.14)
-+    mysql2 (0.3.15)
-     nokogiri (1.5.11)
-     oauth (0.4.7)
-     oauth2 (0.9.3)
-@@ -100,7 +100,7 @@ GEM
-       multi_xml (~> 0.5)
-       rack (~> 1.2)
-     orm_adapter (0.5.0)
--    passenger (4.0.35)
-+    passenger (4.0.36)
-       daemon_controller (>= 1.1.0)
-       rack
-       rake (>= 0.8.1)
-@@ -127,7 +127,7 @@ GEM
-     rdoc (4.1.1)
-       json (~> 1.4)
-     safe_yaml (0.9.7)
--    sass (3.2.13)
-+    sass (3.2.14)
-     sass-rails (4.0.1)
-       railties (>= 4.0.0, < 5.0)
-       sass (>= 3.1.10)
-@@ -168,6 +168,7 @@ GEM
-     webmock (1.17.1)
-       addressable (>= 2.2.7)
-       crack (>= 0.3.2)
-+    will_paginate (3.0.5)
-     youtube_it (2.3.2)
-       builder
-       excon
-@@ -189,7 +190,7 @@ DEPENDENCIES
-   annotate
-   cancan
-   carrierwave
--  compass-rails (~> 2.0.alpha.0)
-+  compass-rails
-   devise
-   jbuilder (~> 1.2)
-   jquery-rails
-@@ -203,5 +204,6 @@ DEPENDENCIES
-   thin
-   turbolinks
-   uglifier (>= 1.3.0)
-+  will_paginate
-   youtube_it
-   zurb-foundation
-diff --git a/app/controllers/courses_controller.rb b/app/controllers/courses_controller.rb
-index 4a18004..30993b4 100644
---- a/app/controllers/courses_controller.rb
-+++ b/app/controllers/courses_controller.rb
-@@ -36,6 +36,8 @@ class CoursesController < ApplicationController
-     unless @course_user.present?
-       @course_user = CourseUser.new
-     end
-+
-+    @topics = @course.topics.paginate(page: 1, per_page: 5)
-   end
- 
-   def edit
-diff --git a/app/models/course.rb b/app/models/course.rb
-index 80c8add..9919989 100644
---- a/app/models/course.rb
-+++ b/app/models/course.rb
-@@ -22,6 +22,7 @@ class Course < ActiveRecord::Base
-   has_many :students, class_name: "User", through: :course_users, source: :user
-   has_many :capsules, dependent: :destroy
-   has_many :documents, dependent: :destroy
-+  has_many :topics, dependent: :destroy
- 
-   # Student definitions
-   # ========================================================
-diff --git a/db/schema.rb b/db/schema.rb
-index b419925..8466aaf 100644
---- a/db/schema.rb
-+++ b/db/schema.rb
-@@ -11,7 +11,7 @@
- #
- # It's strongly recommended that you check this file into your version control system.
- 
--ActiveRecord::Schema.define(version: 20140118001231) do
-+ActiveRecord::Schema.define(version: 20140127233042) do
- 
-   create_table "capsules", force: true do |t|
-     t.string   "name"
-@@ -60,6 +60,26 @@ ActiveRecord::Schema.define(version: 20140118001231) do
-     t.integer  "capsule_id"
-   end
- 
-+  create_table "replies", force: true do |t|
-+    t.integer  "course_id"
-+    t.integer  "topic_id"
-+    t.integer  "user_id"
-+    t.string   "body"
-+    t.datetime "created_at"
-+    t.datetime "updated_at"
-+  end
-+
-+  create_table "topics", force: true do |t|
-+    t.integer  "replies",        default: 0
-+    t.integer  "course_id"
-+    t.integer  "user_id"
-+    t.integer  "last_poster_id"
-+    t.string   "name"
-+    t.string   "body"
-+    t.datetime "created_at"
-+    t.datetime "updated_at"
-+  end
-+
-   create_table "users", force: true do |t|
-     t.string   "email",                  default: "", null: false
-     t.string   "encrypted_password",     default: "", null: false
diff --git a/test/fixtures/replies.yml b/test/fixtures/replies.yml
index 1ac7ee4..91b9734 100644
--- a/test/fixtures/replies.yml
+++ b/test/fixtures/replies.yml
@@ -5,7 +5,7 @@
 #  id         :integer          not null, primary key
 #  course_id  :integer
 #  topic_id   :integer
-#  user_id    :integer
+#  author_id  :integer
 #  body       :string(255)
 #  created_at :datetime
 #  updated_at :datetime
diff --git a/test/fixtures/topics.yml b/test/fixtures/topics.yml
index 1940c50..95299c0 100644
--- a/test/fixtures/topics.yml
+++ b/test/fixtures/topics.yml
@@ -5,12 +5,13 @@
 #  id             :integer          not null, primary key
 #  replies        :integer          default(0)
 #  course_id      :integer
-#  user_id        :integer
+#  author_id      :integer
 #  last_poster_id :integer
 #  name           :string(255)
 #  body           :string(255)
 #  created_at     :datetime
 #  updated_at     :datetime
+#  capsule_id     :integer
 #
 
 # Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
